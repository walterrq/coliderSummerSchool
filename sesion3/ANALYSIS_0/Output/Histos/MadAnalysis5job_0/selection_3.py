def selection_3():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(100.0,200.0,101,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([100.5,101.5,102.5,103.5,104.5,105.5,106.5,107.5,108.5,109.5,110.5,111.5,112.5,113.5,114.5,115.5,116.5,117.5,118.5,119.5,120.5,121.5,122.5,123.5,124.5,125.5,126.5,127.5,128.5,129.5,130.5,131.5,132.5,133.5,134.5,135.5,136.5,137.5,138.5,139.5,140.5,141.5,142.5,143.5,144.5,145.5,146.5,147.5,148.5,149.5,150.5,151.5,152.5,153.5,154.5,155.5,156.5,157.5,158.5,159.5,160.5,161.5,162.5,163.5,164.5,165.5,166.5,167.5,168.5,169.5,170.5,171.5,172.5,173.5,174.5,175.5,176.5,177.5,178.5,179.5,180.5,181.5,182.5,183.5,184.5,185.5,186.5,187.5,188.5,189.5,190.5,191.5,192.5,193.5,194.5,195.5,196.5,197.5,198.5,199.5])

    # Creating weights for histo: y4_M_0
    y4_M_0_weights = numpy.array([0.0576171960983,0.0521087489815,0.0604802565382,0.0656914406321,0.0535197119625,0.0453060545294,0.0631747938775,0.0487476086463,0.0584998925237,0.0637370032484,0.0701624102533,0.0501328740303,0.0372703792945,0.0583169860978,0.0562991521469,0.0558679959401,0.0623243912238,0.0483415316452,0.0425927364151,0.0405597862305,0.0440923812995,0.0533155970029,0.02947970156,0.0374163883685,0.0932192699875,0.101194388675,0.0356249085632,0.0387395855814,0.0545997668492,0.0210702797412,0.0444580338276,0.0622140656223,0.0328620733323,0.0408655693124,0.0329350206109,0.0268070140492,0.0389869650337,0.0289722541807,0.0300962148548,0.0265058803543,0.039061446839,0.0437421656524,0.0390794259956,0.0178324741297,0.0391236753337,0.0204492544798,0.0236059225625,0.0362309550113,0.0332627451348,0.0,0.0148953326937,0.0245638795083,0.0143281968049,0.0390310769516,0.0123392119566,0.0350837932091,0.0181320274911,0.0387853007362,0.0212105790015,0.0230568368308,0.0272568365141,0.0165660017283,0.0204878901985,0.0273207369559,0.027230841173,0.00616310141718,0.0185681033447,0.0147549303681,0.0210434667493,0.0209749558563,0.012349312349,0.0151549448435,0.00308711279543,0.00895665466686,0.0093011765327,0.0116964490932,0.0208652440655,0.0120723165306,0.00310966804815,0.00619807030411,0.0154442832955,0.0156814753225,0.0150124880843,0.0132969948366,0.0207707011861,0.0145001348001,0.0171642908003,0.0117105255131,0.0184126191407,0.00620854173135,0.00861575153572,0.0125993440131,0.00939576063826,0.012556597137,0.0218851226007,0.0215057417841,0.0121357818081,0.00625344152565,0.00311002992162,0.0188070245772])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(8,6),dpi=80)
    frame = gridspec.GridSpec(1,1)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y4_M_0_weights,\
             label="$hsig$", histtype="stepfilled", rwidth=1.0,\
             color="#5954d8", edgecolor="#5954d8", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"$M$ $[ a_{1} a_{2} ]$ $(GeV/c^{2})$ ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 0.001\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y4_M_0_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y4_M_0_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_3.png')

# Running!
if __name__ == '__main__':
    selection_3()
