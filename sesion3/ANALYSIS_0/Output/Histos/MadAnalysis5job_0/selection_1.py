def selection_1():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(100.0,200.0,101,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([100.5,101.5,102.5,103.5,104.5,105.5,106.5,107.5,108.5,109.5,110.5,111.5,112.5,113.5,114.5,115.5,116.5,117.5,118.5,119.5,120.5,121.5,122.5,123.5,124.5,125.5,126.5,127.5,128.5,129.5,130.5,131.5,132.5,133.5,134.5,135.5,136.5,137.5,138.5,139.5,140.5,141.5,142.5,143.5,144.5,145.5,146.5,147.5,148.5,149.5,150.5,151.5,152.5,153.5,154.5,155.5,156.5,157.5,158.5,159.5,160.5,161.5,162.5,163.5,164.5,165.5,166.5,167.5,168.5,169.5,170.5,171.5,172.5,173.5,174.5,175.5,176.5,177.5,178.5,179.5,180.5,181.5,182.5,183.5,184.5,185.5,186.5,187.5,188.5,189.5,190.5,191.5,192.5,193.5,194.5,195.5,196.5,197.5,198.5,199.5])

    # Creating weights for histo: y2_M_0
    y2_M_0_weights = numpy.array([0.156113544671,0.164284177434,0.183436085107,0.148897523165,0.14203071747,0.117856092866,0.149611746488,0.135005264167,0.116442763545,0.142530825531,0.127922320073,0.117369893867,0.11965924122,0.11037636116,0.109581380979,0.122228511962,0.138555306444,0.115731322035,0.103253403926,0.111951653784,0.0970898909967,0.112889265077,0.082879690504,0.0806274620836,0.168790348321,0.165776830559,0.0652659284245,0.0783349957295,0.102615610197,0.0520553258736,0.0904087642575,0.113239239563,0.0685687265825,0.0650572081931,0.0549067679363,0.0471999391769,0.0615513096267,0.0536576779462,0.0593467092074,0.0451426062229,0.060469381276,0.0775989955921,0.0618791139105,0.052944803381,0.058990552916,0.0422865278062,0.0642492462203,0.076098755706,0.054303901409,0.0182346485697,0.0423929391573,0.0406759707918,0.0316591612587,0.0546678411555,0.0278100376139,0.0649970479864,0.0325764568906,0.051277514252,0.0469325479919,0.035287459573,0.0461008422664,0.0405868403968,0.0394004957321,0.0389142124359,0.0401420594945,0.0147369689948,0.0307548193191,0.0304178828228,0.0294356501345,0.0359157277008,0.0242675989576,0.0223196502412,0.00745897769948,0.0240756595181,0.0370906641245,0.0323475895932,0.0255986147293,0.0200590707636,0.0075440337227,0.0186893428401,0.0293006057844,0.0192388856755,0.0307661151636,0.0199130396593,0.0360125572535,0.0249358380775,0.0210580842438,0.0219220758532,0.032850760458,0.0213262650139,0.0208849796415,0.0208032955122,0.0173004990882,0.0182903157279,0.0268498571116,0.0300592819083,0.0179327460509,0.015175430406,0.00754496661334,0.0369750362634])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(8,6),dpi=80)
    frame = gridspec.GridSpec(1,1)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y2_M_0_weights,\
             label="$hsig$", histtype="stepfilled", rwidth=1.0,\
             color="#5954d8", edgecolor="#5954d8", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"$M$ $[ a_{1} a_{2} ]$ $(GeV/c^{2})$ ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 0.001\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y2_M_0_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y2_M_0_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_1.png')

# Running!
if __name__ == '__main__':
    selection_1()
