def selection_6():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(105.0,160.0,201,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([105.1375,105.4125,105.6875,105.9625,106.2375,106.5125,106.7875,107.0625,107.3375,107.6125,107.8875,108.1625,108.4375,108.7125,108.9875,109.2625,109.5375,109.8125,110.0875,110.3625,110.6375,110.9125,111.1875,111.4625,111.7375,112.0125,112.2875,112.5625,112.8375,113.1125,113.3875,113.6625,113.9375,114.2125,114.4875,114.7625,115.0375,115.3125,115.5875,115.8625,116.1375,116.4125,116.6875,116.9625,117.2375,117.5125,117.7875,118.0625,118.3375,118.6125,118.8875,119.1625,119.4375,119.7125,119.9875,120.2625,120.5375,120.8125,121.0875,121.3625,121.6375,121.9125,122.1875,122.4625,122.7375,123.0125,123.2875,123.5625,123.8375,124.1125,124.3875,124.6625,124.9375,125.2125,125.4875,125.7625,126.0375,126.3125,126.5875,126.8625,127.1375,127.4125,127.6875,127.9625,128.2375,128.5125,128.7875,129.0625,129.3375,129.6125,129.8875,130.1625,130.4375,130.7125,130.9875,131.2625,131.5375,131.8125,132.0875,132.3625,132.6375,132.9125,133.1875,133.4625,133.7375,134.0125,134.2875,134.5625,134.8375,135.1125,135.3875,135.6625,135.9375,136.2125,136.4875,136.7625,137.0375,137.3125,137.5875,137.8625,138.1375,138.4125,138.6875,138.9625,139.2375,139.5125,139.7875,140.0625,140.3375,140.6125,140.8875,141.1625,141.4375,141.7125,141.9875,142.2625,142.5375,142.8125,143.0875,143.3625,143.6375,143.9125,144.1875,144.4625,144.7375,145.0125,145.2875,145.5625,145.8375,146.1125,146.3875,146.6625,146.9375,147.2125,147.4875,147.7625,148.0375,148.3125,148.5875,148.8625,149.1375,149.4125,149.6875,149.9625,150.2375,150.5125,150.7875,151.0625,151.3375,151.6125,151.8875,152.1625,152.4375,152.7125,152.9875,153.2625,153.5375,153.8125,154.0875,154.3625,154.6375,154.9125,155.1875,155.4625,155.7375,156.0125,156.2875,156.5625,156.8375,157.1125,157.3875,157.6625,157.9375,158.2125,158.4875,158.7625,159.0375,159.3125,159.5875,159.8625])

    # Creating weights for histo: y7_M_0
    y7_M_0_weights = numpy.array([0.0196661566637,0.0143134797838,0.00837010856557,0.00884154726722,0.0137451437301,0.0143141394013,0.02672103604,0.0140056262211,0.005591469865,0.0202211056887,0.0144307496971,0.0207876506977,0.0139071737292,0.0178411278928,0.00595067739817,0.0280896965368,0.0178062574887,0.00892666769857,0.0178534063976,0.0172061658913,0.0177724727051,0.026261800262,0.00595291505891,0.0172863987403,0.0179122703881,0.0143843634709,0.0142822647601,0.00298241928064,0.011606750842,0.0259506806765,0.0149665698147,0.00840090216706,0.00899882939453,0.0238111151351,0.0179442251912,0.0119937287298,0.00850862594932,0.0205407636562,0.0239105158271,0.0054581813241,0.0263759965409,0.0179411492666,0.0119786857864,0.0196639831324,0.0115600714525,0.0119343058967,0.0112117292853,0.0170892601419,0.0120095664207,0.00546944749931,0.00802446441715,0.012078631579,0.0144417158379,0.0140394430695,0.0,0.0120140073871,0.0140404943348,0.0150243138297,0.0206440487624,0.0116339279989,0.0120081326688,0.0120430465893,0.0119093160131,0.0060289245236,0.00558493323884,0.00896441476782,0.00853743153697,0.00545663992627,0.0204144331638,0.00860231224676,0.0225701158174,0.0140374413136,0.0862552024705,0.0271665755936,0.0151262522168,0.0150990315434,0.0116166451044,0.00547492827941,0.0119672638681,0.0121228213705,0.01203263242,0.00905065288437,0.0146259140236,0.00904057081417,0.0259223262856,0.0030273832066,0.0106057904536,0.00903407999479,0.00908617145424,0.00600795647438,0.00597615054326,0.0090976071145,0.0175694479368,0.0117106543396,0.0146497564477,0.0116212509752,0.0120643284149,0.0238823675666,0.0146269904827,0.00303986326123,0.00908718607421,0.0121847177692,0.0141552975535,0.00853792625009,0.0151464507123,0.00913009556651,0.00563141794958,0.00605016970377,0.0151492472156,0.0,0.00558228789785,0.0120994141108,0.0121762480973,0.00911382958229,0.0152353524925,0.0085344609679,0.00607251882711,0.011537971976,0.0060884504219,0.0083256966112,0.0118105818095,0.00607975400652,0.00305691941224,0.0122021266323,0.00826352308155,0.0,0.0121328484726,0.00912664860702,0.00299737519122,0.0238841311273,0.0061096314726,0.00864485070421,0.00250181693454,0.0213077109959,0.0169064865468,0.00915036048179,0.00608616924473,0.015150142738,0.00914855111435,0.00259360454134,0.00916438880527,0.0,0.0030661197021,0.00612472022281,0.0208049519149,0.00912787622847,0.0,0.0143531507375,0.00609610473326,0.00914860837282,0.00263186464642,0.0087600547321,0.00612231994804,0.0121894038018,0.0117480716001,0.00615344335828,0.0122845215608,0.00913362268784,0.00876081970517,0.00616690596814,0.0,0.0,0.0,0.0,0.00305618879425,0.0,0.00877256914181,0.00612537067895,0.00933626955034,0.0,0.0121688228198,0.00253369157582,0.00611447095791,0.00307958689263,0.00872913516199,0.00877999441932,0.0148838634002,0.00616329181394,0.00307523983011,0.00308049157635,0.0061793699904,0.00307935098777,0.0111007234479,0.0178473278392,0.00304396525753,0.00309176920326,0.00618806640578,0.00578400488291,0.00615995708105,0.00924561337078,0.0203005758549,0.00614671892436,0.003092389885,0.0119429931508,0.0092675868786,0.0,0.0,0.00616158551174,0.0114845429589,0.00541069802577])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(8,6),dpi=80)
    frame = gridspec.GridSpec(1,1)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y7_M_0_weights,\
             label="$hsig$", histtype="stepfilled", rwidth=1.0,\
             color="#5954d8", edgecolor="#5954d8", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"$M$ $[ a_{1} a_{2} ]$ $(GeV/c^{2})$ ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 0.001\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y7_M_0_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y7_M_0_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_6.png')

# Running!
if __name__ == '__main__':
    selection_6()
